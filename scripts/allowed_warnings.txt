# List of ignored warnings used by `fail_on_warnings` in `scripts/utils.sh`.
# Each line is a regexp and represents a match used by
# `grep --invert-match --extended-regexp --file`.
# Comments and empty lines are ignored.

# https://github.com/browserslist/browserslist/blob/d0ec62eb48c41c218478cd3ac28684df051cc865/node.js#L329
# warns if caniuse-lite package is older than 6 months. Ignore this
# warning message so that GitLab backports don't fail.
Browserslist: caniuse-lite is outdated\. Please run next command `yarn upgrade`

# https://github.com/mime-types/mime-types-data/pull/50#issuecomment-1060908930
Type application/netcdf is already registered as a variant of application/netcdf\.

# This warning is emitted by scripts/static-analysis.
\*\*\*\* .+ had the following warning\(s\):

# Ruby 3 extracts net-protocol into a separate gem, while Ruby 2 has it built-in.
# This can be removed when support for Ruby 2 is dropped.
2\.7\.0\/gems\/net-protocol-0\.1\.3\/lib\/net\/protocol\.rb:208: warning: already initialized constant Net::BufferedIO::BUFSIZE
ruby\/2\.7\.0\/net\/protocol\.rb:206: warning: previous definition of BUFSIZE was here
2\.7\.0\/gems\/net-protocol-0\.1\.3\/lib\/net\/protocol\.rb:504: warning: already initialized constant Net::NetPrivate::Socket
ruby\/2\.7\.0\/net\/protocol\.rb:503: warning: previous definition of Socket was here
2\.7\.0\/gems\/net-protocol-0\.1\.3\/lib\/net\/protocol\.rb:68: warning: already initialized constant Net::ProtocRetryError
ruby\/2\.7\.0\/net\/protocol\.rb:66: warning: previous definition of ProtocRetryError was here

# Ruby 3 does not emit warnings for pattern matching, and if it's working
# fine in both Ruby 2 and Ruby 3, it's unlikely it'll change again.
# This can be removed when support for Ruby 2 is dropped.
warning: Pattern matching is experimental, and the behavior may change in future versions of Ruby!

# As of Ruby 3.1, one-line typesafe/destructuring pattern matching via "rightward assignment" has
# been included for multiple years with no significant negative feedback or indications of removal.
# In the event that it is removed in a future Ruby release, the changes required to fix it are
# isolated and minor, and will have no fundamental effect on the logic. See the section
# "Rightward assignment pattern matching and destructuring with types" in
# ee/lib/remote_development/README.md for more information and context.
warning: One-line pattern matching is experimental, and the behavior may change in future versions of Ruby!
